{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-contents.js","components/ArticlesList.js","components/CommentsList.js","pages/NotFoundPage.js","components/UpvoteSection.js","components/AddcommentForm.js","pages/ArticlePage.js","pages/ArticlesListPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articleContent","name","title","content","ArticlesList","articles","map","article","key","to","substring","CommentsList","comments","comment","className","username","text","NotFoundPage","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddcommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","row","col","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","ArticlesListPage","NavBar","App","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.943e573f.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n        <h1>Hello, Welcome to my blog!</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n            Nulla a consectetur elit. Nulla feugiat justo sed velit rhoncus ultricies. \n            Etiam sit amet nisl aliquam nisl lacinia pulvinar. Suspendisse potenti. \n            Maecenas ut feugiat dui. Quisque ullamcorper est ac elit commodo, id molestie purus finibus. \n            Nulla elit tellus, molestie id vestibulum euismod, bibendum hendrerit augue. \n            Sed lectus ex, rutrum sed urna lacinia, sodales laoreet nunc. Praesent sed odio augue. \n            Cras eget massa a orci dictum dictum vitae sit amet massa. \n            Sed laoreet, justo sit amet accumsan bibendum, mauris nulla efficitur odio, eget tincidunt felis nibh vel mi. \n            Quisque efficitur arcu eget mauris porta tincidunt. </p>\n\n    </>\n    \n    \n);\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n        <h1>Hello, Welcome to my About page!</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n            Nulla a consectetur elit. Nulla feugiat justo sed velit rhoncus ultricies. \n            Etiam sit amet nisl aliquam nisl lacinia pulvinar. Suspendisse potenti. \n            Maecenas ut feugiat dui. Quisque ullamcorper est ac elit commodo, id molestie purus finibus. \n            Nulla elit tellus, molestie id vestibulum euismod, bibendum hendrerit augue. \n            Sed lectus ex, rutrum sed urna lacinia, sodales laoreet nunc. Praesent sed odio augue. \n            Cras eget massa a orci dictum dictum vitae sit amet massa. \n            Sed laoreet, justo sit amet accumsan bibendum, mauris nulla efficitur odio, eget tincidunt felis nibh vel mi. \n            Quisque efficitur arcu eget mauris porta tincidunt. </p>\n\n    </>\n    \n    \n);\n\nexport default AboutPage;","const articleContent = [\n    {\n        name: \"learn-react\",\n        title: \"The Fastest way to learn React\",\n        content: [\n            'Welcome! we are going to learn React.   Pellentesque dictum, nisi a lacinia cursus, turpis velit condimentum libero, et tempus arcu dui sit amet leo. Nullam ut laoreet enim. Vestibulum tristique ultrices faucibus. Nullam tellus elit, vulputate vitae auctor in, facilisis in leo. Integer porttitor dignissim lacus, quis tempor tellus. Nam iaculis elit nisi, ut mattis risus accumsan eu. Etiam aliquam non leo vehicula mattis. Nam a placerat est. Duis pretium nisl eu lacus hendrerit tincidunt. Phasellus nec est felis. Fusce tempor dui tortor, vel scelerisque quam vulputate nec.'\n            \n        ]\n    },\n    {\n        name: \"learn-node\",\n        title: \"The Fastest way to learn Node\",\n        content: [\n            'Welcome! we are going to learn Node.     Pellentesque dictum, nisi a lacinia cursus, turpis velit condimentum libero, et tempus arcu dui sit amet leo. Nullam ut laoreet enim. Vestibulum tristique ultrices faucibus. Nullam tellus elit, vulputate vitae auctor in, facilisis in leo. Integer porttitor dignissim lacus, quis tempor tellus. Nam iaculis elit nisi, ut mattis risus accumsan eu. Etiam aliquam non leo vehicula mattis. Nam a placerat est. Duis pretium nisl eu lacus hendrerit tincidunt. Phasellus nec est felis. Fusce tempor dui tortor, vel scelerisque quam vulputate nec.'\n        ]\n    },\n    {\n        name: \"learn-vue\",\n        title: \"The Fastest way to learn Vue\",\n        content: [\n            'Welcome! we are going to learn Vue.     Pellentesque dictum, nisi a lacinia cursus, turpis velit condimentum libero, et tempus arcu dui sit amet leo. Nullam ut laoreet enim. Vestibulum tristique ultrices faucibus. Nullam tellus elit, vulputate vitae auctor in, facilisis in leo. Integer porttitor dignissim lacus, quis tempor tellus. Nam iaculis elit nisi, ut mattis risus accumsan eu. Etiam aliquam non leo vehicula mattis. Nam a placerat est. Duis pretium nisl eu lacus hendrerit tincidunt. Phasellus nec est felis. Fusce tempor dui tortor, vel scelerisque quam vulputate nec.'\n        ]\n    }\n   \n];\n\nexport default articleContent;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ( { articles } ) => (\n    <>\n        \n        {articles.map((article, key) => (\n            <Link key = {key} to={`/article/${article.name}`}>\n                <h3>{ article.title }</h3>\n                <p>{ article.content[0].substring(0, 45) }...</p>\n            </Link>\n        ))}\n        \n    </>\n    \n);\n\nexport default ArticlesList;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n        \n\n    ))}\n    </>\n)\n\nexport default CommentsList;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n)\n\nexport default NotFoundPage;","import React from \"react\";\n\nconst UpvoteSection = ({articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvotes`, {\n            method: \"post\",\n\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvote-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p> This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n   \n   \n\n\nexport default UpvoteSection;","import React, {useState} from 'react';\n\nconst AddcommentForm = ({articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: \"post\",\n            body: JSON.stringify({username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n    \n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a comment</h3>\n            <label>\n                Name: \n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea row=\"4\" col=\"50\"  value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            \n            <button onClick={() => addComment() }>Add comment</button>\n        </div>\n       \n    )\n} \n\nexport default AddcommentForm;","import React from 'react';\nimport articleContent from './article-contents';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport NotFoundPage from './NotFoundPage';\nimport UpvoteSection from '../components/UpvoteSection';\nimport AddcommentForm from '../components/AddcommentForm';\nimport { useState, useEffect } from 'react';\n\nconst ArticlePage = ({ match }) => {\n\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            console.log(body);\n            setArticleInfo(body);\n        }\n        fetchData();\n        \n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n    return (\n        <>\n        <h1>{  article.title }</h1>\n        <UpvoteSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n        {article.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <CommentsList comments = { articleInfo.comments } />\n        <AddcommentForm articleName={name} setArticleInfo={setArticleInfo} />\n        <h3>Other articles:</h3>\n        <ArticlesList articles = { otherArticles } />\n            \n        </>    \n    )\n    \n};\n\nexport default ArticlePage;","import React from 'react';\nimport articleContent from './article-contents';\nimport ArticlesList from '../components/ArticlesList';\n\nconst ArticlesListPage = () => (\n    <>\n        <h1>Articles</h1>\n        <ArticlesList articles={ articleContent } />\n    </>\n    \n    \n);\n\nexport default ArticlesListPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n           \n        </ul>\n    </nav>\n);\n\n\n\nexport default NavBar;","import 'whatwg-fetch';\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, \n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlePage from './pages/ArticlePage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\n\n//import Bootstrap_NavBar from './Bootstrap_NavBar';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n             <NavBar /> \n            {/* <Bootstrap_NavBar > */}\n            <div id=\"page-body\">\n              <Switch>\n                <Route  path =\"/\" component={HomePage} exact />\n                <Route  path =\"/about\" component={AboutPage}  />\n                <Route  path =\"/articles-list\" component={ArticlesListPage}  />\n                <Route  path =\"/article/:name\" component={ArticlePage}  />\n                <Route  component={NotFoundPage}  />\n              </Switch>\n              \n            </div>\n            \n        </div>\n      </Router>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}